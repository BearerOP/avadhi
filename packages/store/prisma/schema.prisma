// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String   @default("Anonymous")
  email     String   @unique @default("anon@mail.com")
  password  String   @default("password")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Website {
  id        String   @id @default(uuid())
  name      String
  url       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticks WebsiteTick[]
}

model Region {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  WebsiteTick WebsiteTick[] 
}

// model WebsiteRegion {
//   websiteId String
//   regionId  String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@id([websiteId, regionId])
// }

model WebsiteTick {
  id        String   @id @default(uuid())
  response_time_ms  Int
  status WebsiteTickStatus @default(UNKNOWN)
  Region Region @relation(fields: [region_id], references: [id])
  // TODO: Add more fields here

  status_code Int
  status_text String
  error_message String? @default("")
  website_id String
  region_id  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Website Website @relation(fields: [website_id], references: [id])

  @@index([website_id, region_id])
}

enum WebsiteTickStatus {
  UP
  DOWN
  UNKNOWN
}